import React, { useEffect, useState } from 'react';
import img from "../images/cloth.png";
import axios from 'axios';
import { Link } from 'react-router-dom';
import Footer from '../Components/Footer';

const Products = ({ productcard, searchQuery }) => {
  const myStyle = {
    width: "19rem",
  };

  const [selectedCategory, setSelectedCategory] = useState("all");
  const [products, setProducts] = useState([]);
  const [sortOrder, setSortOrder] = useState("");
  const [sortedProducts, setSortedProducts] = useState([]);

  useEffect(() => {
    async function fetchData() {
      try {
        const response = await axios.get("https://fakestoreapi.com/products");
        const data = response.data;
        setProducts(data);
      } catch (error) {
        console.error('Error fetching data', error);
      }
    }

    fetchData();
  }, []);

  const filterProducts = productcard.filter((product) => {
    const productTitle = product.title ? product.title.toLowerCase() : "";
    const search = searchQuery ? searchQuery.toLowerCase() : "";

    return (
      (selectedCategory === "all" || product.category === selectedCategory) &&
      productTitle.includes(search)
    );
  });

  useEffect(() => {
    let sorted = [...filterProducts];

    if (sortOrder === "asc") {
      sorted = sorted.sort((a, b) => a.price - b.price);
    } else if (sortOrder === "desc") {
      sorted = sorted.sort((a, b) => b.price - a.price);
    } else if (sortOrder === "true") {
      sorted = sorted.sort((a, b) => a.title.localeCompare(b.title));
    } else if (sortOrder === "false") {
      sorted = sorted.sort((a, b) => b.title.localeCompare(a.title));
    }

    setSortedProducts(prevState => [...sorted]);
  }, [sortOrder, filterProducts]);

  const handleSort = (order) => {
    setSortOrder(order);
  };

  return (
    <>
      {/* ... (rest of your code) */}
    </>
  );
};

export default Products;
